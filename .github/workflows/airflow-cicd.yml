name: Airflow CI/CD
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Debug Mode
          set -x
          
          # Setup SSH
          echo "Setting up SSH..."
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/ec2.key
          chmod 600 ~/.ssh/ec2.key
          
          # Test SSH connection
          echo "Testing SSH connection..."
          ssh -i ~/.ssh/ec2.key -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "echo 'SSH connection successful'"
          
          # Check local dags directory
          echo "Checking local dags directory..."
          if [ ! -d "dags" ] || [ -z "$(ls -A dags)" ]; then
            echo "Error: dags directory is missing or empty"
            ls -la
            exit 1
          fi
          
          # Deploy DAGs
          echo "Deploying DAGs..."
          rsync -av -e "ssh -i ~/.ssh/ec2.key -o StrictHostKeyChecking=no" \
            --delete \
            dags/ \
            $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/airflow/dags/
          
          # Verify deployment
          echo "Verifying deployment..."
          ssh -i ~/.ssh/ec2.key -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST \
            "ls -la /home/$EC2_USERNAME/airflow/dags/"
          
          # Restart Airflow
          echo "Restarting Airflow..."
          ssh -i ~/.ssh/ec2.key -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST \
            "cd /home/$EC2_USERNAME/airflow && docker-compose up -d"
      
      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/ec2.key
